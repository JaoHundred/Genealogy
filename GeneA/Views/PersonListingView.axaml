<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d" d:DesignWidth="350" d:DesignHeight="550"
             xmlns:icon="https://github.com/projektanker/icons.avalonia"
             xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
             xmlns:ia="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions"
             xmlns:vm="clr-namespace:GeneA.ViewModels;assembly=GeneA"
             xmlns:loc="clr-namespace:GeneA.Lang;assembly=GeneA"
             xmlns:conv="using:GeneA.Converters"
             x:DataType="vm:PersonListingViewModel"
             x:Class="GeneA.Views.PersonListingView">

  <UserControl.Resources>
    <conv:ValidDatetimeConverter x:Key="ValidDatetimeConverter"/>
  </UserControl.Resources>

  <UserControl.Styles>
    <Style Selector=":is(Control).marginControl">
      <Setter Property="Margin" Value="5"/>
    </Style>
    

    <Style Selector="RadioButton TextBlock">
      <Setter Property="FontSize" Value="16"/>
    </Style>


    <Style Selector="ListBox.filters ListBoxItem:selected /template/ ContentPresenter">
      <Setter Property="Background" Value="Transparent"/>
    </Style>
    <Style Selector="ListBox.filters ListBoxItem:pointerover /template/ ContentPresenter">
      <Setter Property="Background" Value="Transparent"/>
    </Style>


    <Style Selector="Button.closeFiltersButton">
      <Setter Property="Background" Value="DarkRed"/>
      <Setter Property="Foreground" Value="White"/>

      <Style Selector="^:pointerover /template/ ContentPresenter">
        <Setter Property="Background" Value="Red"/>
        <Setter Property="Foreground" Value="White"/>
      </Style>
      <Style Selector="^:pressed /template/ ContentPresenter">
        <Setter Property="Background" Value="Red"/>
        <Setter Property="Foreground" Value="White"/>
      </Style>
    </Style>

    


  </UserControl.Styles>

  <!--{Binding IsFilterPaneOpen, Mode=TwoWay}-->
  <SplitView DisplayMode="Overlay" Name="splitPane"
             PaneClosed="SplitView_PaneClosed"
             IsPaneOpen="{Binding IsFilterPaneOpen, Mode=TwoWay}">
    <SplitView.Pane>
      <Border BorderThickness="0,5,5,5" >
        <Grid RowDefinitions="auto *">
          <TextBlock Text="{x:Static loc:Resource.Filters}" Margin="5"
                     HorizontalAlignment="Center" VerticalAlignment="Center"
                     FontSize="24"/>

          <Button HorizontalAlignment="Right" Classes="closeFiltersButton"
                  Margin="5"
                  Content="X" VerticalContentAlignment="Center"
                  Command="{Binding OpenFilterPaneCommand}"
                  CommandParameter="{x:False}"/>

          <ScrollViewer Grid.Row="1">

            <Grid  Margin="5"
                   RowDefinitions="auto auto auto auto auto auto *">

              <TextBlock Text="{x:Static loc:Resource.SortBy}"
                         FontSize="18"/>
              <StackPanel Grid.Row="1" Margin="5" Orientation="Horizontal">
                <RadioButton GroupName="Order"
                             IsChecked="{Binding IsAscendingChecked}">
                  <TextBlock Text="{x:Static loc:Resource.Ascending}"
                           />
                </RadioButton >
                <RadioButton GroupName="Order" Margin="5,0,0,0"
                             HorizontalAlignment="Right">
                  <TextBlock Text="{x:Static loc:Resource.Descending}"/>
                </RadioButton>
              </StackPanel>

              <TextBlock Grid.Row="2" Text="Procurar por intervalo" FontSize="18"
                         Margin="0,5,0,0"/>
              <StackPanel Grid.Row="3" Orientation="Vertical" Margin="5" >
                <TextBlock Text="{x:Static loc:Resource.BirthDate}"
                           FontSize="16"/>

                <CalendarDatePicker DisplayDateStart="{Binding BirthDateStart}"
                                    DisplayDateEnd="{Binding BirthDateEnd}"
                                    SelectedDate="{Binding SelectedBirthDate
                                    , Converter={StaticResource ValidDatetimeConverter}}"
                                    CalendarClosed="CalendarDatePicker_CalendarClosed"
                                  />
                <TextBlock Text="{x:Static loc:Resource.DeathDate}"
                           FontSize="16" Margin="0,5,0,0"/>
                <CalendarDatePicker DisplayDateStart="{Binding DeathDateStart}"
                                    DisplayDateEnd="{Binding DeathDateEnd}"
                                    SelectedDate="{Binding SelectedDeathDate
                                    , Converter={StaticResource ValidDatetimeConverter}}"
                                    CalendarClosed="CalendarDatePicker_CalendarClosed"/>


                <TextBlock Text="{x:Static loc:Resource.Baptism}"
                           FontSize="16" Margin="0,5,0,0"/>
                <CalendarDatePicker DisplayDateStart="{Binding BapTismStart}"
                                    DisplayDateEnd="{Binding BapTismEnd}"
                                    SelectedDate="{Binding SelectedBaptismDateLeft
                                    , Converter={StaticResource ValidDatetimeConverter}}"
                                    CalendarClosed="CalendarDatePicker_CalendarClosed"/>
                <CalendarDatePicker DisplayDateStart="{Binding BapTismStart}"
                                    DisplayDateEnd="{Binding BapTismEnd}"
                                    SelectedDate="{Binding SelectedBaptismDateRight
                                    , Converter={StaticResource ValidDatetimeConverter}}"
                                    CalendarClosed="CalendarDatePicker_CalendarClosed"/>

                <TextBlock Text="{x:Static loc:Resource.Wedding}"
                           FontSize="16" Margin="0,5,0,0"/>
                <CalendarDatePicker DisplayDateStart="{Binding WeddingStart}"
                                    DisplayDateEnd="{Binding WeddingEnd}"
                                    SelectedDate="{Binding SelectedWeddingDateLeft
                                    , Converter={StaticResource ValidDatetimeConverter}}"
                                    CalendarClosed="CalendarDatePicker_CalendarClosed"/>
                <CalendarDatePicker DisplayDateStart="{Binding WeddingStart}"
                                    DisplayDateEnd="{Binding WeddingEnd}"
                                    SelectedDate="{Binding SelectedWeddingDateRight
                                    , Converter={StaticResource ValidDatetimeConverter}}"
                                    CalendarClosed="CalendarDatePicker_CalendarClosed"/>
              </StackPanel>
              <ListBox Grid.Row="4" Margin="0,5,0,0"
                       Classes="filters"
                       ItemsSource="{Binding FilterItems}"
                       Name="FilterListing">

                <ListBox.ItemTemplate>
                  <DataTemplate>
                    <CheckBox IsChecked="{Binding IsSelected}">
                      <TextBlock Text="{Binding .}" FontSize="16"/>
                    </CheckBox>
                  </DataTemplate>
                </ListBox.ItemTemplate>

              </ListBox>


              <Grid Grid.Row="5" RowDefinitions="auto auto"
                    ColumnDefinitions="* *" Margin="5">
                <TextBlock Text="{x:Static loc:Resource.Nationality}"
                           FontSize="16"/>
                <ComboBox Grid.Row="1" ItemsSource="{Binding NationalityItems}"
                          SelectedItem="{Binding SelectedNationalityItem}"
                          DropDownClosed="ComboBox_DropDownClosed"
                          Margin="0,0,5,0"/>
                <TextBlock Grid.Column="1" Margin="5,0,0,0"
                           Text="{x:Static loc:Resource.Gender}"
                           FontSize="16"/>
                <ComboBox Grid.Column="1" Grid.Row="1"
                          ItemsSource="{Binding Genders}"
                          SelectedItem="{Binding SelectedGender}"
                          DisplayMemberBinding="{Binding Name}"
                          DropDownClosed="ComboBox_DropDownClosed"
                          Margin="5,0,0,0"/>
              </Grid>
              <Grid Grid.Row="6" ColumnDefinitions="* *" Margin="5"
                    VerticalAlignment="Bottom">
                <Button HorizontalAlignment="Stretch"
                        Classes="cancelButton"
                        VerticalContentAlignment="Center"
                        Margin="0,0,5,0"
                        Command="{Binding ResetFiltersCommand}">
                  <StackPanel>
                    <icon:Icon Value="mdi-filter-remove"/>
                    <TextBlock Text="{x:Static loc:Resource.ResetFilters}"
                              />
                  </StackPanel>
                </Button>
                <Button Grid.Column="1"
                        HorizontalAlignment="Stretch"
                        Classes="confirmButton"
                        VerticalContentAlignment="Center"
                        Margin="5,0,0,0"
                        Command="{Binding ApplyFiltersCommand}">
                  <StackPanel>
                    <icon:Icon Value="mdi-filter-check"/>
                    <TextBlock Text="{x:Static loc:Resource.ApplyFilters}"/>
                  </StackPanel>
                </Button>
              </Grid>

            </Grid>
          </ScrollViewer>
        </Grid>
      </Border>

    </SplitView.Pane>

    <Grid RowDefinitions="auto auto auto *" >
      <TextBox Classes="marginControl"
               Name="SearchTextBox"
               Text="{Binding SearchText, Mode=TwoWay}"
               Watermark="{x:Static loc:Resource.SearchTheName}" >
        <i:Interaction.Behaviors>
          <ia:EventTriggerBehavior EventName="TextChanged">
            <ia:InvokeCommandAction
              Command="{Binding TextFilterCommand}"/>
          </ia:EventTriggerBehavior>
        </i:Interaction.Behaviors>

      </TextBox>
      <Grid Classes="marginControl" Grid.Row="1"
            ColumnDefinitions="auto auto *">
        <StackPanel Orientation="Horizontal" Margin="12,5,0,0" >
          <CheckBox IsChecked="{Binding IsAllChecked}"
                    Name="CheckAll">
            <i:Interaction.Behaviors>
              <ia:EventTriggerBehavior EventName="Click">
                <ia:InvokeCommandAction
                  Command="{Binding CheckAllCommand}"
                  CommandParameter="{Binding #CheckAll.IsChecked}"/>
              </ia:EventTriggerBehavior>
            </i:Interaction.Behaviors>
          </CheckBox>
          <Rectangle Fill="LightGray" Width="3"/>
        </StackPanel>
        <Button Grid.Column="1" Margin="5"
                Classes="filter"
                Command="{Binding OpenFilterPaneCommand}"
                CommandParameter="{x:True}">

          <StackPanel>
            <icon:Icon Value="mdi-filter"/>
            <TextBlock Text="{x:Static loc:Resource.Filters}"/>
          </StackPanel>
        </Button>
        <Button Grid.Column="2"
              IsEnabled="{Binding CanDelete}"
              Classes="cancelButton disabledTransparentBackground"
              Margin="5" HorizontalAlignment="Right"
              Command="{Binding DeleteSelectedPeopleCommand}">
          <StackPanel>
            <icon:Icon Value="mdi-trash-can"/>
            <TextBlock Text="{x:Static loc:Resource.DeleteSelected}"
                     />
          </StackPanel>
        </Button>

      </Grid>

      <Rectangle Grid.Row="2" Fill="LightGray" Height="5" />
      <ListBox Grid.Row="3" Classes="marginControl"
               ItemTemplate="{StaticResource ListTemplatePersonItemViewModel}"
               ItemsSource="{Binding People}"
               SelectionMode="Single"
               Name="PeopleListing"
               SelectedItem="{Binding SelectedPersonItem}">
      </ListBox>

    </Grid>
  </SplitView>
</UserControl>
